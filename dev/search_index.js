var documenterSearchIndex = {"docs":
[{"location":"types/","page":"Exported Types","title":"Exported Types","text":"CurrentModule = VortexStepMethod","category":"page"},{"location":"types/#Enumerations","page":"Exported Types","title":"Enumerations","text":"","category":"section"},{"location":"types/","page":"Exported Types","title":"Exported Types","text":"Model\nPanelDistribution","category":"page"},{"location":"types/#VortexStepMethod.Model","page":"Exported Types","title":"VortexStepMethod.Model","text":"Model VSM LLT\n\nEnumeration of the implemented model types.\n\nElements\n\nVSM: Vortex Step Method\nLLT: Lifting Line Theory\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.PanelDistribution","page":"Exported Types","title":"VortexStepMethod.PanelDistribution","text":"PanelDistribution LINEAR COSINE COSINE_VAN_GARREL SPLIT_PROVIDED UNCHANGED\n\nEnumeration of the implemented model types.\n\nElements\n\nLINEAR               # Linear distribution\nCOSINE               # Cosine distribution\nCOSINE_VAN_GARREL  # van Garrel cosine distribution\nSPLIT_PROVIDED     # Split provided sections\nUNCHANGED            # Keep original sections\n\n\n\n\n\n","category":"type"},{"location":"types/#Basic-Vectors","page":"Exported Types","title":"Basic Vectors","text":"","category":"section"},{"location":"types/","page":"Exported Types","title":"Exported Types","text":"   MVec3\n   PosVector\n   VelVector","category":"page"},{"location":"types/#VortexStepMethod.MVec3","page":"Exported Types","title":"VortexStepMethod.MVec3","text":"const MVec3    = MVector{3, Float64}\n\nBasic 3-dimensional vector, stack allocated, mutable.\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.PosVector","page":"Exported Types","title":"VortexStepMethod.PosVector","text":"const PosVector=Union{MVec3, Vector, SizedVector{3, Float64, Vector{Float64}}}\n\nPosition vector, either a MVec3 or a Vector for use in function signatures.\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.VelVector","page":"Exported Types","title":"VortexStepMethod.VelVector","text":"const VelVector=Union{MVec3, Vector, SizedVector{3, Float64, Vector{Float64}}}\n\nVelocity vector, either a MVec3 or a Vector for use in function signatures.\n\n\n\n\n\n","category":"type"},{"location":"types/#Wing-Geometry,-Panel-and-Aerodynamics","page":"Exported Types","title":"Wing Geometry, Panel and Aerodynamics","text":"","category":"section"},{"location":"types/","page":"Exported Types","title":"Exported Types","text":"    Section\n    Wing\n    BoundFilament\n    Panel\n    PanelProperties\n    BodyAerodynamics","category":"page"},{"location":"types/#VortexStepMethod.Section","page":"Exported Types","title":"VortexStepMethod.Section","text":"Section{T}\n\nRepresents a wing section with leading edge, trailing edge, and aerodynamic properties.\n\nFields\n\nLE_point::MVec3: Leading edge point coordinates\nTE_point::MVec3: Trailing edge point coordinates\naero_input::T: Aerodynamic input, one of three possible types\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.Wing","page":"Exported Types","title":"VortexStepMethod.Wing","text":"Wing\n\nRepresents a wing composed of multiple sections with aerodynamic properties.\n\nFields\n\nn_panels::Int64: Number of panels in aerodynamic mesh\nspanwise_panel_distribution::PanelDistribution: PanelDistribution\nspanwise_direction::Vector{Float64}: Wing span direction vector\nsections::Vector{Section}: List of wing sections, see: Section\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.BoundFilament","page":"Exported Types","title":"VortexStepMethod.BoundFilament","text":"BoundFilament\n\nRepresents a bound vortex filament defined by two points.\n\nFields\n\nx1::MVec3: First point\nx2::MVec3: Second point\nlength: Filament length\nr0::MVec3: Vector from x1 to x2\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.Panel","page":"Exported Types","title":"VortexStepMethod.Panel","text":"Panel\n\nRepresents a panel in a vortex step method simulation. All points and vectors are in the kite body (KB) frame.\n\nFields\n\nTE_point_1::MVec3: First trailing edge point\nLE_point_1::MVec3: First leading edge point\nTE_point_2::Vector{MVec3}: Second trailing edge point\nLE_point_2::Vector{MVec3}: Second leading edge point\nchord::Float64: Panel chord length\nva::Union{Nothing, MVec3}: Panel velocity\ncorner_points::Matrix{Float64}: Panel corner points\naero_model::Symbol: Aerodynamic model type\naero_center::Vector{Float64}: Panel aerodynamic center\ncontrol_point::Vector{MVec3}: Panel control point\nbound_point_1::Vector{MVec3}: First bound point\nbound_point_2::Vector{MVec3}: Second bound point\nx_airf::MVec3: Unit vector perpendicular to chord line\ny_airf::MVec3: Unit vector parallel to chord line\nz_airf::MVec3: Unit vector in spanwise direction\nwidth::Float64: Panel width\nfilaments::Vector{BoundFilament}: Panel filaments\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.PanelProperties","page":"Exported Types","title":"VortexStepMethod.PanelProperties","text":"PanelProperties\n\nStructure to hold calculated panel properties.\n\nFields\n\naero_centers::Vector{MVec3}\ncontrol_points::Vector{MVec3}\nbound_points_1::Vector{MVec3}\nbound_points_2::Vector{MVec3}\nx_airf::Vector{MVec3}: Vector of unit vectors perpendicular to chord line\ny_airf::Vector{MVec3}: Vector of unit vectors parallel to chord line\nz_airf::Vector{MVec3}: Vector of unit vectors in spanwise direction\n\n\n\n\n\n","category":"type"},{"location":"types/#VortexStepMethod.BodyAerodynamics","page":"Exported Types","title":"VortexStepMethod.BodyAerodynamics","text":"BodyAerodynamics\n\nMain structure for calculating aerodynamic properties of bodies.\n\nFields\n\npanels::Vector{Panel}: Vector of Panel structs\nwings::Vector{AbstractWing}: a vector of wings; a body can have multiple wings\nva::Union{Nothing, MVec3}: A vector of the apparent wind speed, see: MVec3\nomega::Union{Nothing, MVec3}: A vector of the turn rate around the kite body axes\ngamma_distribution::Union{Nothing, Vector{Float64}}: unclear, please defined\nalpha_uncorrected::Union{Nothing, Vector{Float64}}: unclear, please define\nalpha_corrected::Union{Nothing, Vector{Float64}}: unclear, please define\nstall_angle_list::Vector{Float64}: unclear, please define\n\n\n\n\n\n","category":"type"},{"location":"types/#The-Solver","page":"Exported Types","title":"The Solver","text":"","category":"section"},{"location":"types/","page":"Exported Types","title":"Exported Types","text":"Solver","category":"page"},{"location":"types/#VortexStepMethod.Solver","page":"Exported Types","title":"VortexStepMethod.Solver","text":"Solver\n\nMain solver structure for the Vortex Step Method.\n\nAttributes\n\nGeneral settings\n\naerodynamic_model_type::Symbol\ndensity::Float64\nmax_iterations::Int64\nallowed_error::Float64\ntol_reference_error::Float64\nrelaxation_factor::Float64\n\nDamping settings\n\nis_with_artificial_damping::Bool\nartificial_damping::NamedTuple{(:k2, :k4), Tuple{Float64, Float64}}\n\nAdditional settings\n\ntype_initial_gamma_distribution::Symbol\ncore_radius_fraction::Float64\nmu::Float64\nis_only_f_and_gamma_output::Bool\n\n\n\n\n\n","category":"type"},{"location":"functions/","page":"Exported Functions","title":"Exported Functions","text":"CurrentModule = VortexStepMethod","category":"page"},{"location":"functions/#Functions-for-creating-the-geometry","page":"Exported Functions","title":"Functions for creating the geometry","text":"","category":"section"},{"location":"functions/","page":"Exported Functions","title":"Exported Functions","text":"add_section!","category":"page"},{"location":"functions/#VortexStepMethod.add_section!","page":"Exported Functions","title":"VortexStepMethod.add_section!","text":"add_section!(wing::Wing, LE_point::PosVector, TE_point::PosVector, aero_input)\n\nAdd a new section to the wing.\n\nArguments:\n\nwing::Wing: The Wing to which a section shall be added\nLE_point::PosVector: PosVector of the point on the side of the leading edge\nTE_point::PosVector: PosVector of the point on the side of the trailing edge\naero_input: Can be:\n:inviscid\n:lei_airfoil_breukels\n(:polar_data, (alpha_range, cl_vector, cd_vector, cm_vector))\n(:polar_data, (alpha_range, beta_range, cl_matrix, cd_matrix, cm_matrix))\n\n\n\n\n\n","category":"function"},{"location":"functions/#Functions-for-setting-the-inflow-conditions","page":"Exported Functions","title":"Functions for setting the inflow conditions","text":"","category":"section"},{"location":"functions/","page":"Exported Functions","title":"Exported Functions","text":"set_va!","category":"page"},{"location":"functions/#VortexStepMethod.set_va!","page":"Exported Functions","title":"VortexStepMethod.set_va!","text":"set_va!(body_aero::BodyAerodynamics, va, omega=zeros(MVec3))\n\nSet velocity array and update wake filaments.\n\nArguments\n\nbody_aero::BodyAerodynamics: The BodyAerodynamics struct to modify\nva: Either a velocity vector or a vector of velocity vectors per panel \nomega: Turn rate around x y and z axis\n\n\n\n\n\n","category":"function"},{"location":"functions/#Main-Plotting-Functions","page":"Exported Functions","title":"Main Plotting Functions","text":"","category":"section"},{"location":"functions/","page":"Exported Functions","title":"Exported Functions","text":"plot_geometry\nplot_distribution\nplot_polars","category":"page"},{"location":"functions/#VortexStepMethod.plot_geometry","page":"Exported Functions","title":"VortexStepMethod.plot_geometry","text":"plot_geometry(body_aero::BodyAerodynamics, title; \n              data_type=\".pdf\", save_path=nothing, \n              is_save=false, is_show=false, \n              view_elevation=15, view_azimuth=-120)\n\nPlot wing geometry from different viewpoints and optionally save/show plots.\n\nArguments:\n\nbody_aero: the BodyAerodynamics to plot\ntitle: plot title\n\nKeyword arguments:\n\ndata_type`: string with the file type postfix (default: \".pdf\")\nsave_path: path for saving the graphic (default: nothing)\nis_save: boolean value, indicates if the graphic shall be saved (default: false)\nis_show: boolean value, indicates if the graphic shall be displayed (default: false)\nview_elevation: initial view elevation angle (default: 15) [°]\nview_azimuth: initial view azimuth angle (default: -120) [°]\n\n\n\n\n\n","category":"function"},{"location":"functions/#VortexStepMethod.plot_distribution","page":"Exported Functions","title":"VortexStepMethod.plot_distribution","text":"plot_distribution(y_coordinates_list, results_list, label_list;  \n                  title=\"spanwise_distribution\", data_type=\".pdf\",\n                  save_path=nothing, is_save=false, is_show=true)\n\nPlot spanwise distributions of aerodynamic properties.\n\nArguments\n\ny_coordinates_list: List of spanwise coordinates\nresults_list: List of result dictionaries\nlabel_list: List of labels for different results\n\nKeyword arguments\n\ntitle: Plot title (default: \"spanwise_distribution\")\ndata_type: File extension for saving (default: \".pdf\")\nsave_path: Path to save plots (default: nothing)\nis_save: Whether to save plots (default: false)\nis_show: Whether to display plots (default: true)\n\n\n\n\n\n","category":"function"},{"location":"functions/#VortexStepMethod.plot_polars","page":"Exported Functions","title":"VortexStepMethod.plot_polars","text":"plot_polars(solver_list, body_aero_list, label_list;\nliterature_path_list=String[], angle_range=range(0, 20, 2), angle_type=\"angle_of_attack\", \nangle_of_attack=0.0, side_slip=0.0, v_a=10.0, \ntitle=\"polar\", data_type=\".pdf\", save_path=nothing, \nis_save=true, is_show=true)\n\nPlot polar data comparing different solvers and configurations.\n\nArguments\n\nsolver_list: List of aerodynamic solvers\nbody_aero_list: List of wing aerodynamics objects\nlabel_list: List of labels for each configuration\n\nKeyword arguments\n\nliterature_path_list: Optional paths to literature data files\nangle_range: Range of angles to analyze [°]\nangle_type: \"angle_of_attack\" or \"side_slip\"; (default: angle_of_attack) \nangle_of_attack: AoA to be used for plotting the polars (default: 0.0) [rad]\nside_slip: side slip angle (default: 0.0) [rad]\nv_a: norm of apparent wind speed (default: 10.0) [m/s]\ntitle: plot title\ndata_type: File extension for saving (default: \".pdf\")\nsave_path: Path to save plots (default: nothing)\nis_save: Whether to save plots (default: true)\nis_show: Whether to display plots (default: true)\n\n\n\n\n\n","category":"function"},{"location":"functions/#Helper-Functions","page":"Exported Functions","title":"Helper Functions","text":"","category":"section"},{"location":"functions/","page":"Exported Functions","title":"Exported Functions","text":"save_plot\nshow_plot","category":"page"},{"location":"functions/#VortexStepMethod.save_plot","page":"Exported Functions","title":"VortexStepMethod.save_plot","text":"save_plot(fig, save_path, title; data_type=\".pdf\")\n\nSave a plot to a file.\n\nArguments\n\nfig: Plots figure object\nsave_path: Path to save the plot\ntitle: Title of the plot\n\nKeyword arguments\n\ndata_type: File extension (default: \".pdf\")\n\n\n\n\n\n","category":"function"},{"location":"functions/#VortexStepMethod.show_plot","page":"Exported Functions","title":"VortexStepMethod.show_plot","text":"show_plot(fig; dpi=130)\n\nDisplay a plot at specified DPI.\n\nArguments\n\nfig: Plots figure object\n\nKeyword arguments\n\ndpi: Dots per inch for the figure (default: 130)\n\n\n\n\n\n","category":"function"},{"location":"private_functions/","page":"Private Functions","title":"Private Functions","text":"CurrentModule = VortexStepMethod","category":"page"},{"location":"private_functions/#Private-Functions","page":"Private Functions","title":"Private Functions","text":"","category":"section"},{"location":"private_functions/","page":"Private Functions","title":"Private Functions","text":"calculate_AIC_matrices!\nplot_line_segment!\ncreate_geometry_plot\ngenerate_polar_data\nset_axes_equal!\nset_plot_style","category":"page"},{"location":"private_functions/#VortexStepMethod.calculate_AIC_matrices!","page":"Private Functions","title":"VortexStepMethod.calculate_AIC_matrices!","text":"calculate_AIC_matrices!(body_aero::BodyAerodynamics, model::Model, \n                     core_radius_fraction::Float64,\n                     va_norm_array::Vector{Float64}, \n                     va_unit_array::Matrix{Float64})\n\nCalculate Aerodynamic Influence Coefficient matrices.\n\nSee also: BodyAerodynamics, Model\n\nReturns:     Tuple of (AIC_x, AIC_y, AIC_z) matrices\n\n\n\n\n\n","category":"function"},{"location":"private_functions/#VortexStepMethod.plot_line_segment!","page":"Private Functions","title":"VortexStepMethod.plot_line_segment!","text":"plot_line_segment!(ax, segment, color, label; width=3)\n\nPlot a line segment in 3D with arrow.\n\nArguments\n\nax: Plot axis\nsegment: Array of two points defining the segment\ncolor: Color of the segment\nlabel: Label for the legend\n\nKeyword Arguments\n\nwidth: Line width (default: 3)\n\n\n\n\n\n","category":"function"},{"location":"private_functions/#VortexStepMethod.create_geometry_plot","page":"Private Functions","title":"VortexStepMethod.create_geometry_plot","text":"create_geometry_plot(body_aero::BodyAerodynamics, title, view_elevation, view_azimuth; zoom=1.8)\n\nCreate a 3D plot of wing geometry including panels and filaments.\n\nArguments\n\nbody_aero: struct of type BodyAerodynamics\ntitle: plot title\nview_elevation: initial view elevation angle [°]\nview_azimuth: initial view azimuth angle [°]\n\nKeyword arguments\n\nzoom: zoom factor (default: 1.8)\n\n\n\n\n\n","category":"function"},{"location":"private_functions/#VortexStepMethod.generate_polar_data","page":"Private Functions","title":"VortexStepMethod.generate_polar_data","text":"generate_polar_data(solver, body_aero::BodyAerodynamics, angle_range;     \n                    angle_type=\"angle_of_attack\", angle_of_attack=0.0,\n                    side_slip=0.0, v_a=10.0)\n\nGenerate polar data for aerodynamic analysis over a range of angles.\n\nArguments\n\nsolver: Aerodynamic solver object\nbody_aero: Wing aerodynamics struct\nangle_range: Range of angles to analyze\n\nKeyword arguments\n\nangle_type: Type of angle variation (\"angleofattack\" or \"side_slip\")\nangle_of_attack: Initial angle of attack [rad]\nside_slip: Initial side slip angle in [rad]\nv_a: norm of apparent wind speed [m/s]\n\nReturns\n\nTuple of polar data array and Reynolds number\n\n\n\n\n\n","category":"function"},{"location":"private_functions/#VortexStepMethod.set_axes_equal!","page":"Private Functions","title":"VortexStepMethod.set_axes_equal!","text":"set_axes_equal!(ax; zoom=1.8)\n\nSet 3D plot axes to equal scale.\n\nArguments\n\nax: 3D plot axis\n\nKeyword arguments\n\nzoom: zoom factor (default: 1.8)\n\n\n\n\n\n","category":"function"},{"location":"private_functions/#VortexStepMethod.set_plot_style","page":"Private Functions","title":"VortexStepMethod.set_plot_style","text":"set_plot_style(titel_size=16)\n\nSet the default style for plots using LaTeX.\n\nArguments:\n\ntitel_size: size of the plot title in points (default: 16)\n\n\n\n\n\n","category":"function"},{"location":"explanation/#How-the-model-works","page":"How it works","title":"How the model works","text":"","category":"section"},{"location":"explanation/","page":"How it works","title":"How it works","text":"Flowchart that describes how this software works:","category":"page"},{"location":"explanation/","page":"How it works","title":"How it works","text":"(Image: Flowchart)","category":"page"},{"location":"explanation/","page":"How it works","title":"How it works","text":"AIC: Aerodynamic Influence Coefficient (AIC). The AIC matrix represents the relationship between the induced velocities or pressures on aerodynamic surfaces and the circulation strength or modal deformations of the lifting surfaces.","category":"page"},{"location":"explanation/#References:","page":"How it works","title":"References:","text":"","category":"section"},{"location":"explanation/","page":"How it works","title":"How it works","text":"Fast Aero-Structural Model of a Leading-Edge Inflatable Kite by Oriol Canon, Mac Gaunaa and Roland Schmehl, Energies 2023 16(7),   doi: 10.3390/en16073061","category":"page"},{"location":"explanation/","page":"How it works","title":"How it works","text":"For extensions of the original work see: News.md.","category":"page"},{"location":"glossary/","page":"-","title":"-","text":"First Term   This is the definition of the first term.","category":"page"},{"location":"glossary/","page":"-","title":"-","text":"Second Term   This is one definition of the second term. This is another definition of the second term.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = VortexStepMethod","category":"page"},{"location":"#Aerodynamic-models-of-3D-wings-using-the-Vortex-Step-Method","page":"Home","title":"Aerodynamic models of 3D wings using the Vortex Step Method","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Vortex Step Method (VSM) is an enhanced lifting line method that improves upon the classic approach by solving the circulation system at the three-quarter chord position, among the most important details. This adjustment allows for more accurate calculations of lift and drag forces, particularly addressing the shortcomings in induced drag prediction.  VSM is further refined by coupling it with 2D viscous airfoil polars, making it well-suited for complex geometries,  including low aspect ratio wings, as well as configurations with sweep, dihedral, and anhedral angles.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The software presented here includes a couple of examples: a rectangular wing, a leading-edge inflatable kite and a ram-air kite.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package was translated from the Python code version 1.0.0 available at https://github.com/ocayon/Vortex-Step-Method with some extensions as documented in News.md.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Install Julia 1.10 or later,  if you haven't already. On Linux, make sure that Python3, Matplotlib and LaTeX are installed:","category":"page"},{"location":"","page":"Home","title":"Home","text":"sudo apt install python3-matplotlib\nsudo apt install texlive-full texlive-fonts-extra cm-super","category":"page"},{"location":"","page":"Home","title":"Home","text":"Furthermore, the package TestEnv must be installed globally:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia -e 'using Pkg; Pkg.add(\"TestEnv\")'","category":"page"},{"location":"","page":"Home","title":"Home","text":"Before installing this software it is suggested to create a new project, for example like this:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mkdir test\ncd test\njulia --project=.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then add VortexStepMethod from  Julia's package manager, by typing:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\npkg\"add https://github.com/Albatross-Kite-Transport/VortexStepMethod.jl\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"at the Julia prompt. You can run the unit tests with the command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg\"test VortexStepMethod\"","category":"page"},{"location":"#Running-the-examples","page":"Home","title":"Running the examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have git installed, check out this repo because it makes it easier to understand the code:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mkdir repos\ncd repos\ngit clone https://github.com/Albatross-Kite-Transport/VortexStepMethod.jl\ncd VortexStepMethod.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can launch Julia with:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia --project","category":"page"},{"location":"","page":"Home","title":"Home","text":"or with:","category":"page"},{"location":"","page":"Home","title":"Home","text":"./bin/run_julia","category":"page"},{"location":"","page":"Home","title":"Home","text":"In Julia, first update the packages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.update()","category":"page"},{"location":"","page":"Home","title":"Home","text":"and then you can display a menu with the available examples:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VortexStepMethod\nmenu()","category":"page"},{"location":"","page":"Home","title":"Home","text":"To browse the code, it is suggested to use VSCode with the Julia plugin.","category":"page"},{"location":"#Input","page":"Home","title":"Input","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Three kinds of input data is needed:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The wing geometry, defined by section:\nfor the rectangualar wing two sections, two points in CAD reference frame + polars   (three different options to provide them) per section\nkite wing: model of polars included, n sections to define\nThe airflow and turn rate:\nv_app vector and omega (turn rate) vector in Kite Body (KB) reference frame\nThe configuration:\nhow many panels   –> two sections make a panel.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Apart from the wing geometry there is no input file yet, the input has to be defined in the code.","category":"page"},{"location":"#Example-for-defining-the-required-input:","page":"Home","title":"Example for defining the required input:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"\n# Step 1: Define wing parameters\nn_panels = 20          # Number of panels\nspan = 20.0            # Wing span [m]\nchord = 1.0            # Chord length [m]\nv_a = 20.0             # Magnitude of inflow velocity [m/s]\ndensity = 1.225        # Air density [kg/m³]\nalpha_deg = 30.0       # Angle of attack [degrees]\nalpha = deg2rad(alpha_deg)\n\n# Step 2: Create wing geometry with linear panel distribution\nwing = Wing(n_panels, spanwise_panel_distribution=\"linear\")\n\n# Add wing sections - defining only tip sections with inviscid airfoil model\nadd_section!(wing, \n    [0.0, span/2, 0.0],    # Left tip LE \n    [chord, span/2, 0.0],  # Left tip TE\n    :inviscid)\nadd_section!(wing, \n    [0.0, -span/2, 0.0],   # Right tip LE\n    [chord, -span/2, 0.0], # Right tip TE\n    :inviscid)\n\n# Step 3: Initialize aerodynamics\nwa = BodyAerodynamics([wing])\n\n# Set inflow conditions\nvel_app = [cos(alpha), 0.0, sin(alpha)] .* v_a\nset_va!(wa, vel_app)","category":"page"},{"location":"","page":"Home","title":"Home","text":"It is possible to import the wing geometry using an .obj file as shown in the example ram_air_kite.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Surfplan files can be converted to an input for VortexStepMethod.jl using the SurfplanAdapter.","category":"page"},{"location":"#Output","page":"Home","title":"Output","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CL, CD, CS (side force coefficient)\nthe spanwise distribution of forces   –> moment coefficients (will be implemented in release 1.1) ","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use this project in your research, please consider citing it.  Citation details can be found in the CITATION.cff file included in this repository.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project is licensed under the MIT License - see the [LICENSE]((https://github.com/Albatross-Kite-Transport/VortexStepMethod.jl/blob/main/LICENSE) file for details.","category":"page"},{"location":"#WAIVER","page":"Home","title":"WAIVER","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Technische Universiteit Delft hereby disclaims all copyright interest in the package “VortexStepMethod.jl” written by the Author(s).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Prof.dr. H.G.C. (Henri) Werij, Dean of Aerospace Engineering","category":"page"},{"location":"#Copyright","page":"Home","title":"Copyright","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2022 Oriol Cayon","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2024 Oriol Cayon, Jelle Poland, TU Delft","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2025 Oriol Cayon, Jelle Poland, Bart van de Lint, Uwe Fechner","category":"page"},{"location":"reference_frames/#Reference-Frames","page":"Reference Frames","title":"Reference Frames","text":"","category":"section"},{"location":"reference_frames/#Introduction","page":"Reference Frames","title":"Introduction","text":"","category":"section"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"Reference frames are needed for following purposes:","category":"page"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"for creating a CAD model of the wing (or the wings)\nfor defining the apparent wind speed vector v_a\nfor calculating the lift and drag and side force coefficients\nfor calculating the resulting forces and moments","category":"page"},{"location":"reference_frames/#CAD-reference-frame-(CAD)","page":"Reference Frames","title":"CAD reference frame (CAD)","text":"","category":"section"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"A geometric model is always created using the CAD reference frame. It can have any origin (with respect to the kite), but usually either the center of gravity of the body or the bridle point/ Kite Control Unit is used. ","category":"page"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"Y defined spanwise, looking at the kite from the front (so seeing the LE first) the front left is positive.\nX is defined chord wise, from LE to TE, positive.\nZ is defined as positive upwards.","category":"page"},{"location":"reference_frames/#Kite-Body-reference-frame-(KB)","page":"Reference Frames","title":"Kite Body reference frame (KB)","text":"","category":"section"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"This is a body-fixed reference frame.","category":"page"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"Y defined spanwise, looking at the kite from the front (so seeing the LE first) the front left is positive.\nX is defined chord wise, from LE to TE, positive.\nZ is defined as the cross product of Y and X","category":"page"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"The origin of the kite reference frame can be defined by the user by calling the function init_kb(origin::MVec3) where the origin must be defined in the CAD reference frame.","category":"page"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"This reference frame is different from the kite reference frame K used in KiteModels.jl and KiteUtils.jl.","category":"page"},{"location":"reference_frames/#The-turn-rates","page":"Reference Frames","title":"The turn rates","text":"","category":"section"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"The turn rates mathrmomega = mathrmomega_x mathrmomega_y mathrmomega_z are defined in the KB reference frame. The unit of the components is mathrmradmathrms^-1.","category":"page"},{"location":"reference_frames/#Input-and-output","page":"Reference Frames","title":"Input and output","text":"","category":"section"},{"location":"reference_frames/","page":"Reference Frames","title":"Reference Frames","text":"when running a simulation, the turnrate of the kite must be provided on each time step\nthe apparent wind speed vector v_a is defined in the KB reference frame\nthe resulting forces are defined in the KB reference frame\nthe CL, CD, CS and the resulting moments and moment coefficients are defined in the KB reference frame","category":"page"}]
}
